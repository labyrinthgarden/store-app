services:
  web-app:
    build: ./web-app
    ports: ["3000:80"]
    depends_on:
      - api-gateway

  api-gateway:
    build: ./services/api-gateway
    ports: ["3001:3000"]
    environment:
      - PRODUCT_SERVICE_URL=http://product-service:3000
      - CART_SERVICE_URL=http://cart-service:3000
    depends_on:
      product-service:
        condition: service_healthy
      cart-service:                
        condition: service_started
  product-service:
    build: ./services/product-service
    environment:
      - DB_HOST=postgres-products
      - DB_PORT=5432
      - DB_USERNAME=user
      - DB_PASSWORD=password
      - DB_NAME=products_db
    depends_on:
      postgres-products:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  cart-service:
    build: ./services/cart-service
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PORT=3000
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  postgres-products:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=products_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_products_data:/var/lib/postgresql/data
      - ./init-products.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d products_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

volumes:
  postgres_products_data:
